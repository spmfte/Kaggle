# Loading the training dataset
file_path = '/kaggle/input/open-problems-single-cell-perturbations/de_train.parquet'
df_de_train = pd.read_parquet(file_path)
df_de_train.shape, df_de_train.head()
((614, 18216),
             cell_type             sm_name sm_lincs_id  \
 0            NK cells        Clotrimazole    LSM-5341   
 1        T cells CD4+        Clotrimazole    LSM-5341   
 2        T cells CD8+        Clotrimazole    LSM-5341   
 3  T regulatory cells        Clotrimazole    LSM-5341   
 4            NK cells  Mometasone Furoate    LSM-3349   
 
                                               SMILES  control      A1BG  \
 0             Clc1ccccc1C(c1ccccc1)(c1ccccc1)n1ccnc1    False  0.104720   
 1             Clc1ccccc1C(c1ccccc1)(c1ccccc1)n1ccnc1    False  0.915953   
 2             Clc1ccccc1C(c1ccccc1)(c1ccccc1)n1ccnc1    False -0.387721   
 3             Clc1ccccc1C(c1ccccc1)(c1ccccc1)n1ccnc1    False  0.232893   
 4  C[C@@H]1C[C@H]2[C@@H]3CCC4=CC(=O)C=C[C@]4(C)[C...    False  4.290652   
 
    A1BG-AS1       A2M   A2M-AS1     A2MP1  ...      ZUP1      ZW10    ZWILCH  \
 0 -0.077524 -1.625596 -0.144545  0.143555  ... -0.227781 -0.010752 -0.023881   
 1 -0.884380  0.371834 -0.081677 -0.498266  ... -0.494985 -0.303419  0.304955   
 2 -0.305378  0.567777  0.303895 -0.022653  ... -0.119422 -0.033608 -0.153123   
 3  0.129029  0.336897  0.486946  0.767661  ...  0.451679  0.704643  0.015468   
 4 -0.063864 -0.017443 -0.541154  0.570982  ...  0.758474  0.510762  0.607401   
 
       ZWINT      ZXDA      ZXDB      ZXDC    ZYG11B       ZYX     ZZEF1  
 0  0.674536 -0.453068  0.005164 -0.094959  0.034127  0.221377  0.368755  
 1 -0.333905 -0.315516 -0.369626 -0.095079  0.704780  1.096702 -0.869887  
 2  0.183597 -0.555678 -1.494789 -0.213550  0.415768  0.078439 -0.259365  
 3 -0.103868  0.865027  0.189114  0.224700 -0.048233  0.216139 -0.085024  
 4 -0.123059  0.214366  0.487838 -0.819775  0.112365 -0.122193  0.676629  
 
 [5 rows x 18216 columns]) # Previewing the initial columns of the training dataset
df_de_train.iloc[:, 5:].head(1)
d = df_de_train.iloc[:,:5]
d['PCA1'] = Xr[:,0]
d['PCA2'] = Xr[:,1]
d['PCA3'] = Xr[:,2]
list_top_drugs = []
display( d.sort_values('PCA1', ascending = False ).head(8) )
list_top_drugs += d.sort_values('PCA1', ascending = False ).head(8)['sm_name'].to_list()
print(list_top_drugs)
display( d.sort_values('PCA2', ascending = False ).head(8) )
list_top_drugs += d.sort_values('PCA2', ascending = False ).head(8)['sm_name'].to_list()
display( d.sort_values('PCA3', ascending = False ).head(8) )
list_top_drugs += d.sort_values('PCA3', ascending = False ).head(8)['sm_name'].to_list()
print(list(set(list_top_drugs)))
add Codeadd Markdown 	A1BG	A1BG-AS1	A2M	A2M-AS1	A2MP1	A4GALT	AAAS	AACS	AAGAB	AAK1	...	ZUP1	ZW10	ZWILCH	ZWINT	ZXDA	ZXDB	ZXDC	ZYG11B	ZYX	ZZEF1
0	0.10472	-0.077524	-1.625596	-0.144545	0.143555	0.073229	-0.016823	0.101717	-0.005153	1.043629	...	-0.227781	-0.010752	-0.023881	0.674536	-0.453068	0.005164	-0.094959	0.034127	0.221377	0.368755
1 rows × 18211 colu 	cell_type	sm_name	sm_lincs_id	SMILES	control	PCA1	PCA2	PCA3
280	T regulatory cells	Belinostat	LSM-43181	O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO	True	2627.138763	-2.898142	138.237992
143	NK cells	Alvocidib	LSM-1011	CN1CC[C@H](c2c(O)cc(O)c3c(=O)cc(-c4ccccc4Cl)oc...	False	1799.699242	-67.489870	20.469703
114	NK cells	IN1451	LSM-4349	Nc1ncnc2c1c(I)cn2[C@@H]1O[C@H](CO)[C@@H](O)[C@...	False	1486.503078	-39.998829	23.483177
372	Myeloid cells	MLN 2238	LSM-4944	CC(C)C[C@H](NC(=O)CNC(=O)c1cc(Cl)ccc1Cl)B(O)O	False	1460.792675	-18.126251	-171.037536
371	B cells	MLN 2238	LSM-4944	CC(C)C[C@H](NC(=O)CNC(=O)c1cc(Cl)ccc1Cl)B(O)O	False	1358.927121	-70.274381	-43.627587
144	T cells CD4+	Alvocidib	LSM-1011	CN1CC[C@H](c2c(O)cc(O)c3c(=O)cc(-c4ccccc4Cl)oc...	False	1255.227400	-31.968010	46.209493
373	NK cells	MLN 2238	LSM-4944	CC(C)C[C@H](NC(=O)CNC(=O)c1cc(Cl)ccc1Cl)B(O)O	False	1249.357191	-43.195922	21.100219
535	B cells	Oprozomib (ONX 0912)	LSM-45496	COC[C@H](NC(=O)c1cnc(C)s1)C(=O)N[C@@H](COC)C(=...	False	1170.976851	-66.606928	-52.543825
['Belinostat', 'Alvocidib', 'IN1451', 'MLN 2238', 'MLN 2238', 'Alvocidib', 'MLN 2238', 'Oprozomib (ONX 0912)']
cell_type	sm_name	sm_lincs_id	SMILES	control	PCA1	PCA2	PCA3
278	T cells CD4+	Belinostat	LSM-43181	O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO	True	-14.027104	2020.080065	25.732059
277	NK cells	Belinostat	LSM-43181	O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO	True	528.046950	1010.091666	-12.281671
275	B cells	Belinostat	LSM-43181	O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO	True	-9.250525	966.496213	-99.783872
276	Myeloid cells	Belinostat	LSM-43181	O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO	True	433.792277	783.015093	-669.622545
290	T cells CD4+	Scriptaid	LSM-2499	O=C1c2cccc3cccc(c23)C(=O)N1CCCCCC(O)=NO	False	-61.490594	335.268196	6.148696
135	T cells CD4+	Resminostat	LSM-45663	CN(C)Cc1ccc(S(=O)(=O)n2ccc(/C=C/C(=O)NO)c2)cc1	False	-38.188361	311.900435	-3.380581
65	T cells CD4+	Vorinostat	LSM-3828	O=C(CCCCCCC(=O)Nc1ccccc1)NO	False	-49.342019	288.866338	-2.341653
279	T cells CD8+	Belinostat	LSM-43181	O=C(/C=C/c1cccc(S(=O)(=O)Nc2ccccc2)c1)NO	True	-280.680601	255.656498	16.590977
cell_type	sm_name	sm_lincs_id	SMILES	control	PCA1	PCA2	PCA3
538	T cells CD4+	Oprozomib (ONX 0912)	LSM-45496	COC[C@H](NC(=O)c1cnc(C)s1)C(=O)N[C@@H](COC)C(=...	False	251.261364	193.161051	782.547497
123	T cells CD4+	CEP-18770 (Delanzomib)	LSM-45410	CC(C)C[C@H](NC(=O)[C@@H](NC(=O)c1cccc(-c2ccccc...	False	131.872705	175.834043	728.165445
374	T cells CD4+	MLN 2238	LSM-4944	CC(C)C[C@H](NC(=O)CNC(=O)c1cc(Cl)ccc1Cl)B(O)O	False	-92.172990	168.552356	710.680759
124	T cells CD8+	CEP-18770 (Delanzomib)	LSM-45410	CC(C)C[C@H](NC(=O)[C@@H](NC(=O)c1cccc(-c2ccccc...	False	-341.708866	92.278145	362.414577
375	T cells CD8+	MLN 2238	LSM-4944	CC(C)C[C@H](NC(=O)CNC(=O)c1cc(Cl)ccc1Cl)B(O)O	False	-443.256743	85.059467	338.713960
110	NK cells	Proscillaridin A;Proscillaridin-A	LSM-1476;LSM-5290	C[C@@H]1O[C@@H](O[C@@H]2C=C3CC[C@@H]4[C@H](CC[...	False	-24.711543	-10.486517	303.781234
527	NK cells	Ganetespib (STA-9090)	LSM-45281	CC(C)c1cc(-c2n[nH]c(=O)n2-c2ccc3c(ccn3C)c2)c(O...	False	4.728942	153.414178	219.392380
539	T regulatory cells	Oprozomib (ONX 0912)	LSM-45496	COC[C@H](NC(=O)c1cnc(C)s1)C(=O)N[C@@H](COC)C(=...	False	-28.675311	34.361764	193.815080
['Resminostat', 'Proscillaridin A;Proscillaridin-A', 'Scriptaid', 'CEP-18770 (Delanzomib)', 'MLN 2238', 'Alvocidib', 'Oprozomib (ONX 0912)', 'Vorinostat', 'IN1451', 'Belinostat', 'Ganetespib (STA-9090)']
add Codeadd Markdown
d = df_de_train[['sm_name','sm_lincs_id','SMILES']].drop_duplicates()
print(d.shape)
d.to_csv('compounds.csv')
display( d.head(10) )

print(list(df_de_train['sm_name'].unique() ) )sm_name	sm_lincs_id	SMILES
0	Clotrimazole	LSM-5341	Clc1ccccc1C(c1ccccc1)(c1ccccc1)n1ccnc1
4	Mometasone Furoate	LSM-3349	C[C@@H]1C[C@H]2[C@@H]3CCC4=CC(=O)C=C[C@]4(C)[C...
8	Idelalisib	LSM-1205	CC[C@H](Nc1ncnc2[nH]cnc12)c1nc2cccc(F)c2c(=O)n...
14	Vandetanib	LSM-1199	COc1cc2c(Nc3ccc(Br)cc3F)ncnc2cc1OCC1CCN(C)CC1
18	Bosutinib	LSM-1190	COc1cc(Nc2c(C#N)cnc3cc(OCCCN4CCN(C)CC4)c(OC)cc...
22	Ceritinib	LSM-36374	Cc1cc(Nc2ncc(Cl)c(Nc3ccccc3S(=O)(=O)C(C)C)n2)c...
26	Lamivudine	LSM-5215	Nc1ccn([C@@H]2CS[C@H](CO)O2)c(=O)n1
30	Crizotinib	LSM-1027	C[C@@H](Oc1cc(-c2cnn(C3CCNCC3)c2)cnc1N)c1c(Cl)...
36	Cabozantinib	LSM-1195	COc1cc2nccc(Oc3ccc(NC(=O)C4(C(=O)Nc5ccc(F)cc5)...
40	Flutamide	LSM-2621	CC(C)C(=O)Nc1ccc([N+](=O)[O-])c(C(F)(F)F)c1
display( df_de_train['sm_name'].value_counts().head(20) )
display( df_de_train['sm_name'].value_counts().tail(10) )
df_de_train['sm_name'].value_counts().value_counts() sm_name
R428                        6
MLN 2238                    6
Dactolisib                  6
LDN 193189                  6
Porcn Inhibitor III         6
O-Demethylated Adapalene    6
Penfluridol                 6
Dabrafenib                  6
Linagliptin                 6
CHIR-99021                  6
Belinostat                  6
Palbociclib                 6
Foretinib                   6
Idelalisib                  6
Crizotinib                  6
Alvocidib                   5
Oprozomib (ONX 0912)        5
Mubritinib (TAK 165)        4
TPCA-1                      4
BI-D1870                    4
Name: count, dtype: int64
sm_name
HYDROXYUREA     4
Ketoconazole    4
Decitabine      4
CC-401          4
Saracatinib     4
Masitinib       4
GSK-1070916     4
Isoniazid       4
Resminostat     3
CGP 60474       3
Name: count, dtype: int64
count
4    127
6     15
5      2
3      2
Name: count, dtype: int64 count    18211.000000
mean         0.369443
std          0.140564
min         -0.330502
25%          0.279551
50%          0.385830
75%          0.474798
max          0.925311
Name: 0.7, dtype: float64
CPU times: user 933 ms, sys: 282 ms, total: 1.22 s
Wall time: 727 ms %%time
fn = '/kaggle/input/open-problems-single-cell-perturbations/id_map.csv'
df_id_map = pd.read_csv(fn)
print(df_id_map.shape)
display(df_id_map)
fn = '/kaggle/input/open-problems-single-cell-perturbations/sample_submission.csv'
df = pd.read_csv(fn, index_col = 0)
print(df.shape)
df 	id	cell_type	sm_name
0	0	B cells	5-(9-Isopropyl-8-methyl-2-morpholino-9H-purin-...
1	1	B cells	ABT-199 (GDC-0199)
2	2	B cells	ABT737
3	3	B cells	AMD-070 (hydrochloride)
4	4	B cells	AT 7867
...	...	...	...
250	250	Myeloid cells	Vandetanib
251	251	Myeloid cells	Vanoxerine
252	252	Myeloid cells	Vardenafil
253	253	Myeloid cells	Vorinostat
254	254	Myeloid cells	YK 4-279
255 rows × 3 columns %%time
train_aggr_direct = df_de_train[ ['sm_name'] + list(df_de_train.columns[5:])  ].groupby('sm_name' ).quantile(quantile)# median()
train_aggr_direct CPU times: user 1.61 s, sys: 39.1 ms, total: 1.65 s
Wall time: 1.65 s
A1BG	A1BG-AS1	A2M	A2M-AS1	A2MP1	A4GALT	AAAS	AACS	AAGAB	AAK1	...	ZUP1	ZW10	ZWILCH	ZWINT	ZXDA	ZXDB	ZXDC	ZYG11B	ZYX	ZZEF1
sm_name																					
5-(9-Isopropyl-8-methyl-2-morpholino-9H-purin-6-yl)pyrimidin-2-amine	0.180436	0.108748	0.103002	1.440044	0.288875	0.240432	0.186582	0.120103	-0.531566	0.086468	...	-0.352138	-0.318582	-0.130287	0.761675	0.566092	0.792400	0.282108	0.495100	-0.274340	0.706820
ABT-199 (GDC-0199)	-0.095154	-0.069318	0.203588	-0.041013	0.134159	0.270767	0.056253	0.009566	0.545842	-0.064017	...	0.214607	0.109121	-0.074234	-0.093637	0.308456	-0.137338	0.044330	-0.152630	-0.200960	-0.055610
ABT737	0.267744	0.163488	-0.042922	0.016092	0.368397	0.891709	0.636036	0.178859	-0.231950	0.080786	...	0.187917	-0.136676	0.020771	0.464084	0.102971	0.329031	0.250707	-0.060664	0.022158	-0.271793
AMD-070 (hydrochloride)	-0.179665	-0.015340	0.029722	0.451928	-0.022537	0.246295	-0.200757	0.816466	0.104611	0.278164	...	0.127763	-0.015025	0.175383	0.161458	0.106877	0.301215	0.105258	0.332948	0.033743	0.162193
AT 7867	0.378807	-0.217209	0.140494	0.038594	0.035475	0.267531	-0.282603	0.265214	-0.125597	0.258811	...	-0.604735	-0.056768	0.024118	-0.184315	0.140518	0.302335	0.010933	0.439911	0.048407	0.114856
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
Vandetanib	0.014366	-0.448771	-0.320834	-0.455674	-0.094854	-0.379962	0.126993	0.099980	-0.026327	0.668126	...	0.102640	0.085213	-0.380448	0.077799	-0.052538	0.155417	0.145477	0.144423	0.115752	0.224972
Vanoxerine	0.178222	-0.345847	0.205578	0.137137	0.302499	0.333725	-0.218691	-0.077539	-0.209829	0.239053	...	-0.043511	0.291612	0.145101	0.153805	0.273827	0.049180	-0.099960	0.215808	-0.190046	-0.245949
Vardenafil	0.062737	0.599021	-0.211917	-0.003457	0.022416	-0.172555	-0.115714	-0.344265	0.105817	0.471499	...	0.025426	-0.007278	0.864115	0.268863	0.350377	-0.254956	0.045992	0.121206	0.309446	-0.385470
Vorinostat	-0.346892	-0.192613	0.003474	0.110144	-0.496568	0.760155	0.317976	0.583753	2.173778	1.144051	...	0.170999	0.661364	-0.163610	-0.306409	-0.161133	0.076859	-0.148148	0.418035	-0.006335	0.275724
YK 4-279	-0.309890	0.045986	0.019618	-0.336954	0.181435	0.075613	0.297287	0.576683	0.037499	-0.291963	...	0.154591	0.291262	-0.410789	0.048210	-0.037920	0.205847	-0.012376	0.108084	-0.497828	-0.110238
146 rows × 18211 columns %%time 
from sklearn.decomposition import PCA
from sklearn.decomposition import FastICA
from sklearn.decomposition import TruncatedSVD

Y = df_de_train.iloc[:,5:]
print(X.shape)
if '_pca' in predict_method:
    str_inf_target_dimred = 'PCA' 
    reducer = PCA(n_components=n_components )
elif '_ICA' in predict_method:
    str_inf_target_dimred = 'ICA' 
#     reducer = PCA(n_components=n_components )
    reducer = FastICA(n_components=n_components, random_state=0, whiten='unit-variance')
elif '_TSVD' in predict_method:
    str_inf_target_dimred = 'TSVD' 
#     reducer = PCA(n_components=n_components )
#     reducer = FastICA(n_components=n_components, random_state=0, whiten='unit-variance')
    reducer = TruncatedSVD(n_components=n_components, n_iter=7, random_state=42)
else:
    str_inf_target_dimred = ''
    
print(str_inf_target_dimred , reducer)
Yr = reducer.fit_transform(Y)
Yr_inv_trans = reducer.inverse_transform(Yr)
df_red_inv_trans = pd.DataFrame(Yr_inv_trans, columns = df_de_train.columns[5:])
df_red_inv_trans['sm_name'] = df_de_train['sm_name']

train_aggr_denoised = df_red_inv_trans.groupby('sm_name' ).quantile(quantile)# median()
train_aggr_denoised (146, 84)
TSVD TruncatedSVD(n_components=35, n_iter=7, random_state=42)
CPU times: user 6.47 s, sys: 2.54 s, total: 9.01 s
Wall time: 3.7 s
A1BG	A1BG-AS1	A2M	A2M-AS1	A2MP1	A4GALT	AAAS	AACS	AAGAB	AAK1	...	ZUP1	ZW10	ZWILCH	ZWINT	ZXDA	ZXDB	ZXDC	ZYG11B	ZYX	ZZEF1
sm_name																					
5-(9-Isopropyl-8-methyl-2-morpholino-9H-purin-6-yl)pyrimidin-2-amine	0.103649	0.097195	0.194942	0.602997	0.341633	0.223075	-0.113745	0.460727	-0.250166	0.568548	...	-0.286527	-0.058281	0.067378	0.021996	0.430032	0.199042	0.622905	0.587833	-0.218027	0.118922
ABT-199 (GDC-0199)	0.044327	0.079923	0.043514	-0.034168	0.042395	0.435267	-0.001880	0.116319	0.032170	-0.004861	...	-0.015689	0.028715	0.054091	0.168642	0.099272	0.094341	0.055887	-0.004748	-0.029580	-0.032879
ABT737	0.355470	0.282111	0.270911	0.223458	0.313547	0.940706	0.059485	0.241001	-0.012506	-0.148945	...	-0.002399	0.093423	0.142183	0.265196	0.388181	0.404725	0.156729	0.072099	-0.026162	-0.050902
AMD-070 (hydrochloride)	0.057952	0.063526	0.139894	0.076586	0.184242	0.210231	-0.042807	0.216674	-0.016836	0.071466	...	-0.011513	0.102806	0.036173	0.128943	0.294277	0.155380	0.188922	0.134606	0.014346	0.016172
AT 7867	0.133061	-0.047088	-0.126136	-0.051796	0.169824	0.299970	-0.139584	0.251057	-0.125495	0.235885	...	-0.171509	0.051108	0.094892	0.045778	0.216513	0.075598	0.238699	0.165802	0.086732	-0.062699
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
Vandetanib	-0.154134	-0.105362	-0.106217	-0.136151	-0.255710	-0.285495	-0.076011	-0.047593	-0.008158	0.172602	...	-0.107963	-0.083222	-0.112561	-0.165667	-0.078033	-0.094723	0.035370	0.035737	-0.021354	-0.038047
Vanoxerine	0.135312	0.076976	0.075141	0.000407	0.163507	0.461632	-0.049995	0.084830	-0.122904	0.290846	...	-0.116255	-0.035219	0.047207	0.098459	0.200026	0.155532	0.185809	0.169959	0.090460	-0.110414
Vardenafil	-0.139241	-0.088873	-0.010705	-0.004132	-0.125812	-0.198743	-0.086942	0.031346	-0.076581	0.218705	...	-0.103584	-0.055195	-0.038027	-0.086271	0.018630	-0.067770	0.113031	0.064458	0.015579	-0.013700
Vorinostat	0.005227	0.490434	-0.532351	-0.060637	-0.611912	0.728828	0.474124	0.691737	0.624807	1.177002	...	0.188296	0.898125	-0.253255	-0.420237	-0.191765	-0.073748	-0.051539	0.471906	0.346268	-0.022168
YK 4-279	0.095382	0.017679	0.052295	-0.006879	0.012886	0.090270	0.012569	0.142147	0.091261	-0.465293	...	0.138653	0.122190	0.010618	0.061812	0.128523	0.133408	0.078856	0.017818	-0.037686	-0.059889
146 rows × 18211 columns

add Codeadd Markdown
%%time

if predict_method == 'train_aggregation_by_compounds':
    df = df_id_map.merge(train_aggr, how = 'left', on = 'sm_name')
    df = df.set_index('id').iloc[:,2:]
elif predict_method.startswith('train_aggregation_by_compounds_with_denoising_'):
    df = df_id_map.merge(train_aggr_denoised, how = 'left', on = 'sm_name')
    df = df.set_index('id').iloc[:,2:]
else:
    # consant for each target submission:
    for i,col in enumerate( df.columns ):
        df[col] = train_aggregate_mean_or_median_or_whatever[col]
        if (i%1000) == 0: print(i,col)
    
df CPU times: user 33.4 ms, sys: 32 ms, total: 65.3 ms
Wall time: 65.1 ms
A1BG	A1BG-AS1	A2M	A2M-AS1	A2MP1	A4GALT	AAAS	AACS	AAGAB	AAK1	...	ZUP1	ZW10	ZWILCH	ZWINT	ZXDA	ZXDB	ZXDC	ZYG11B	ZYX	ZZEF1
id																					
0	0.103649	0.097195	0.194942	0.602997	0.341633	0.223075	-0.113745	0.460727	-0.250166	0.568548	...	-0.286527	-0.058281	0.067378	0.021996	0.430032	0.199042	0.622905	0.587833	-0.218027	0.118922
1	0.044327	0.079923	0.043514	-0.034168	0.042395	0.435267	-0.001880	0.116319	0.032170	-0.004861	...	-0.015689	0.028715	0.054091	0.168642	0.099272	0.094341	0.055887	-0.004748	-0.029580	-0.032879
2	0.355470	0.282111	0.270911	0.223458	0.313547	0.940706	0.059485	0.241001	-0.012506	-0.148945	...	-0.002399	0.093423	0.142183	0.265196	0.388181	0.404725	0.156729	0.072099	-0.026162	-0.050902
3	0.057952	0.063526	0.139894	0.076586	0.184242	0.210231	-0.042807	0.216674	-0.016836	0.071466	...	-0.011513	0.102806	0.036173	0.128943	0.294277	0.155380	0.188922	0.134606	0.014346	0.016172
4	0.133061	-0.047088	-0.126136	-0.051796	0.169824	0.299970	-0.139584	0.251057	-0.125495	0.235885	...	-0.171509	0.051108	0.094892	0.045778	0.216513	0.075598	0.238699	0.165802	0.086732	-0.062699
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
250	-0.154134	-0.105362	-0.106217	-0.136151	-0.255710	-0.285495	-0.076011	-0.047593	-0.008158	0.172602	...	-0.107963	-0.083222	-0.112561	-0.165667	-0.078033	-0.094723	0.035370	0.035737	-0.021354	-0.038047
251	0.135312	0.076976	0.075141	0.000407	0.163507	0.461632	-0.049995	0.084830	-0.122904	0.290846	...	-0.116255	-0.035219	0.047207	0.098459	0.200026	0.155532	0.185809	0.169959	0.090460	-0.110414
252	-0.139241	-0.088873	-0.010705	-0.004132	-0.125812	-0.198743	-0.086942	0.031346	-0.076581	0.218705	...	-0.103584	-0.055195	-0.038027	-0.086271	0.018630	-0.067770	0.113031	0.064458	0.015579	-0.013700
253	0.005227	0.490434	-0.532351	-0.060637	-0.611912	0.728828	0.474124	0.691737	0.624807	1.177002	...	0.188296	0.898125	-0.253255	-0.420237	-0.191765	-0.073748	-0.051539	0.471906	0.346268	-0.022168
254	0.095382	0.017679	0.052295	-0.006879	0.012886	0.090270	0.012569	0.142147	0.091261	-0.465293	...	0.138653	0.122190	0.010618	0.061812	0.128523	0.133408	0.078856	0.017818	-0.037686	-0.059889
255 rows × 18211 columns %%time
# Yr = reducer.fit_transform(X)
# n_components_for_cell_type_encoding = 10
df_tmp = pd.DataFrame(Yr[:, :n_components_for_cell_type_encoding  ], index = df_de_train.index  )
df_tmp['column for aggregation'] = df_de_train['cell_type']
df_cell_type_encoded = df_tmp.groupby('column for aggregation').quantile( quantile )
print('df_cell_type_encoded.shape', df_cell_type_encoded.shape )
display( df_cell_type_encoded )


# n_components_for_compound_encoding = 10
df_tmp = pd.DataFrame(Yr[:, :n_components_for_compound_encoding  ], index = df_de_train.index  )
df_tmp['column for aggregation'] = df_de_train['sm_name']
df_compound_encoded = df_tmp.groupby('column for aggregation').quantile( quantile )
print('df_compound_encoded.shape', df_compound_encoded.shape )
display( df_compound_encoded ) df_cell_type_encoded.shape (6, 1)
0
column for aggregation	
B cells	40.456088
Myeloid cells	76.239192
NK cells	27.221068
T cells CD4+	8.167761
T cells CD8+	5.614465
T regulatory cells	33.790925
df_compound_encoded.shape (146, 25)
0	1	2	3	4	5	6	7	8	9	...	15	16	17	18	19	20	21	22	23	24
column for aggregation																					
5-(9-Isopropyl-8-methyl-2-morpholino-9H-purin-6-yl)pyrimidin-2-amine	22.664683	0.209536	-0.544278	4.523854	11.045352	33.870846	-4.298967	-2.481075	0.430037	-21.619303	...	-0.420601	-1.562944	9.666788	9.247790	-0.723893	6.550390	-2.110942	3.473574	5.793850	-1.782937
ABT-199 (GDC-0199)	24.125970	0.187835	0.144659	-2.499023	-4.718112	-4.361417	2.372971	-0.689682	-0.257687	1.270776	...	-1.175359	2.241920	2.871377	1.070339	-0.251204	1.569673	0.806878	2.168101	-0.168717	-0.666452
ABT737	62.872921	-0.093407	0.264872	-1.771058	-0.085450	1.826682	1.468527	-4.463986	-0.539768	-2.059638	...	-0.821027	-1.265321	0.977450	3.630723	-0.511025	2.521284	2.205933	3.393202	0.280866	-0.877930
AMD-070 (hydrochloride)	21.136395	3.053320	2.801800	-0.340349	5.804445	7.341166	-1.442852	0.483854	-0.224415	-2.849543	...	2.427117	-3.066582	2.038110	3.454795	-0.159754	2.635258	0.596492	5.061732	0.502854	-0.343540
AT 7867	23.538966	6.781847	1.854803	0.655967	1.767297	9.771945	0.203200	2.022026	-1.443212	-12.928887	...	-1.994764	-2.271407	4.234212	1.539662	0.790259	2.705041	-0.158921	7.198375	0.117080	2.963775
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
Vandetanib	-17.795870	5.256842	0.798427	2.302161	-3.878001	0.613997	0.109649	2.216141	-0.021041	0.872983	...	-1.479716	-0.769959	2.025977	0.968862	0.378661	2.520272	1.031102	4.371428	2.619618	-1.939068
Vanoxerine	28.534587	5.279237	-2.685573	0.402823	-7.500576	7.984099	-3.491898	-2.962342	0.288679	-1.951085	...	1.283559	-1.920767	1.803750	1.411240	-1.979647	4.211283	-0.469299	4.305369	0.630713	-5.987346
Vardenafil	-12.045052	1.253801	-1.415164	1.629449	-0.975057	4.987140	-1.377148	1.175936	0.057921	-0.136592	...	-0.902567	-2.721618	3.166478	1.554620	-0.863166	3.725311	-0.102829	4.255156	0.672961	-2.282783
Vorinostat	71.628216	121.000739	-0.824376	-30.232154	23.853015	12.991528	-0.087569	14.897033	7.085360	-2.232130	...	-5.715364	4.802533	7.480169	-9.784432	-1.063905	39.649861	8.396357	-4.000461	-10.364785	18.099625
YK 4-279	8.729994	-0.240418	4.990538	-2.250621	2.480544	-1.011454	2.187302	2.179617	1.094117	11.792653	...	2.229217	2.740253	-0.283695	1.264012	1.261958	-1.636263	2.050387	-3.241968	1.533860	6.319735
146 rows × 25 columns

CPU times: user 42.1 ms, sys: 3.01 ms, total: 45.1 ms
Wall time: 43 ms %%time
X_train = np.zeros( (len( df_de_train ) , n_components_for_cell_type_encoding + n_components_for_compound_encoding ))

for i in range(len( X_train )):
    cell_type = df_de_train['cell_type'].iat[i] 
    X_train[i,:n_components_for_cell_type_encoding] = df_cell_type_encoded.loc[cell_type,:].values  
    compound = df_de_train['sm_name'].iat[i] 
    X_train[i,n_components_for_cell_type_encoding:] = df_compound_encoded.loc[ compound, : ].values
print( X_train.shape)     
print( X_train)     
    

X_submit = np.zeros( (len( df_id_map ) , n_components_for_cell_type_encoding + n_components_for_compound_encoding ))
for i in range(len( X_submit )):
    cell_type = df_id_map['cell_type'].iat[i] 
    X_submit[i,:n_components_for_cell_type_encoding] = df_cell_type_encoded.loc[cell_type,:].values  
    compound = df_id_map['sm_name'].iat[i] 
    X_submit[i,n_components_for_cell_type_encoding:] = df_compound_encoded.loc[ compound, : ].values
    
    
print( X_submit.shape)     
print( X_submit) (614, 26)
[[ 27.22106786  21.49362455   5.44251743 ...   4.96459482  -0.41184411
   -6.10601982]
 [  8.16776115  21.49362455   5.44251743 ...   4.96459482  -0.41184411
   -6.10601982]
 [  5.614465    21.49362455   5.44251743 ...   4.96459482  -0.41184411
   -6.10601982]
 ...
 [  8.16776115 -23.21864348   7.09844621 ...   1.60608619   0.48654629
   -1.01566617]
 [  5.614465   -23.21864348   7.09844621 ...   1.60608619   0.48654629
   -1.01566617]
 [ 33.79092517 -23.21864348   7.09844621 ...   1.60608619   0.48654629
   -1.01566617]]
(255, 26)
[[ 4.04560875e+01  2.26646831e+01  2.09535984e-01 ...  3.47357400e+00
   5.79384954e+00 -1.78293733e+00]
 [ 4.04560875e+01  2.41259700e+01  1.87835421e-01 ...  2.16810137e+00
  -1.68716566e-01 -6.66451763e-01]
 [ 4.04560875e+01  6.28729205e+01 -9.34066805e-02 ...  3.39320229e+00
   2.80865768e-01 -8.77930331e-01]
 ...
 [ 7.62391916e+01 -1.20450521e+01  1.25380059e+00 ...  4.25515628e+00
   6.72960648e-01 -2.28278311e+00]
 [ 7.62391916e+01  7.16282159e+01  1.21000739e+02 ... -4.00046096e+00
  -1.03647852e+01  1.80996253e+01]
 [ 7.62391916e+01  8.72999371e+00 -2.40418156e-01 ... -3.24196811e+00
   1.53385992e+00  6.31973497e+00]]
CPU times: user 183 ms, sys: 13.4 ms, total: 196 ms
Wall time: 184 ms
add Codeadd Markdown %%time
from sklearn.linear_model import Ridge

model = Ridge(alpha=alpha_regularization_for_linear_models)
print(model)
model.fit(X_train, Yr)

Y_submit = reducer.inverse_transform(   model.predict(X_submit) )
print(Y_submit.shape)
Y_submit Ridge(alpha=10)
(255, 18211)
CPU times: user 54.9 ms, sys: 33.1 ms, total: 88 ms
Wall time: 32.9 ms
array([[ 0.64459152,  0.39860536,  0.27020261, ...,  0.25510495,
        -0.16632543,  0.15334999],
       [ 0.38000487,  0.14157423, -0.10371501, ...,  0.00519818,
         0.09606546, -0.04912953],
       [ 0.81487422,  0.38295206,  0.52427328, ...,  0.10668834,
         0.17013244, -0.05331803],
       ...,
       [ 0.91935879,  0.36304122, -0.37937892, ...,  0.01617025,
         0.05140655,  0.0164013 ],
       [ 1.41254361,  0.92553531, -0.7996823 , ...,  0.49428867,
         0.08191196,  0.04669714],
       [ 1.16339058,  0.42143941, -0.25960787, ..., -0.13752058,
         0.21179458, -0.06947309]]) # submission 	A1BG	A1BG-AS1	A2M	A2M-AS1	A2MP1	A4GALT	AAAS	AACS	AAGAB	AAK1	...	ZUP1	ZW10	ZWILCH	ZWINT	ZXDA	ZXDB	ZXDC	ZYG11B	ZYX	ZZEF1
id																					
0	0.644592	0.398605	0.270203	1.323888	1.619282	0.761366	0.026115	0.397673	-0.322719	0.820157	...	-0.460002	-0.008937	-0.049726	-0.156502	0.712911	0.559897	0.296904	0.255105	-0.166325	0.153350
1	0.380005	0.141574	-0.103715	0.492726	0.997285	0.915692	0.011654	0.128033	-0.060953	0.121593	...	-0.029613	0.019234	-0.193258	0.085366	0.374616	0.285770	0.035560	0.005198	0.096065	-0.049130
2	0.814874	0.382952	0.524273	0.868605	1.829727	1.949225	0.056172	0.466153	-0.113439	0.097043	...	-0.088422	0.255023	0.034928	0.455065	0.929413	0.691541	0.275825	0.106688	0.170132	-0.053318
3	0.491253	0.214236	-0.124983	0.726619	1.350164	0.687390	0.020720	0.275131	-0.074469	0.349640	...	-0.062872	0.117209	-0.122132	0.115550	0.606020	0.397113	0.144863	0.051093	0.113088	-0.006952
4	0.559808	0.210476	-0.294116	0.478858	1.462971	1.052939	0.000257	0.283320	-0.140933	0.481407	...	-0.225256	0.052719	-0.134087	0.073439	0.586273	0.386104	0.137929	0.115132	-0.111022	-0.005706
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
250	0.844972	0.299087	-0.543541	1.115386	2.648641	1.370775	0.126750	0.062044	-0.247273	0.609241	...	-0.193181	-0.104558	-0.618303	-0.206793	0.767294	0.501231	-0.042140	0.013787	-0.168244	-0.007244
251	1.147214	0.490946	0.078844	1.524762	3.283913	2.145495	0.157573	0.249378	-0.287090	0.711857	...	-0.283649	0.080280	-0.392679	0.083118	1.111287	0.747348	0.084867	0.049206	0.186251	-0.015242
252	0.919359	0.363041	-0.379379	1.374838	2.812305	1.341356	0.148992	0.139147	-0.263796	0.756514	...	-0.258067	-0.017925	-0.523208	-0.131854	0.889862	0.580018	0.008796	0.016170	0.051407	0.016401
253	1.412544	0.925535	-0.799682	1.342036	3.394533	1.819007	0.681980	0.852429	0.869383	1.444376	...	0.181084	0.963461	-0.483797	0.074335	1.308383	1.161913	0.207533	0.494289	0.081912	0.046697
254	1.163391	0.421439	-0.259608	1.323312	2.862718	1.772850	0.224889	0.376682	-0.077154	-0.002227	...	0.037315	0.236072	-0.401979	0.090028	1.073936	0.785984	-0.001388	-0.137521	0.211795	-0.069473
255 rows × 18211 columns
